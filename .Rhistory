usethis::create_package()
getwd()
usethis::create_package(".")
usethis::use_data_raw()
library(raadtools)
topo <- readAll(readtopo('ibcso'))
cl <- rasterToContour(topo, levels = -500)
ibcso_500 <- raadtools:::keepOnlyMostComplexLine(cl)
library(sf)
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
plot(ibcso_500)
splitline <- st_transform(st_linestring(cbind(-180, c(-30, -80)), crs = 4326), st_crs(ibcso_500))
splitline <- st_transform(st_sfc(st_linestring(cbind(-180, c(-30, -80))), crs = 4326), st_crs(ibcso_500))
plot(splitline, add = T)
detach(package:sf)
usethis::use_package_doc()
usethis::use_dev_package("raadtools")
usethis::use_dev_package("aceecostats", "Suggests")
usethis::use_readme_rmd()
install.packages("digest")
## TODO
## get bathy lines
## IBCSO
## GEBCO_14
## just get main line (drop depressions)
## fix dateline bs
library(raadtools)
topo <- readAll(readtopo('ibcso'))
cl <- rasterToContour(topo, levels = -500)
library(sf)
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
splitline <- st_transform(st_sfc(st_linestring(cbind(-180, c(-30, -80))), crs = 4326), st_crs(ibcso_500))
ibcso_500 <- st_transform(ibcso_500, 4326)
plot(ibcso_500)
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
plot(ibcso_500)
plot(splitline, add = T)
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
splitline <- st_transform(st_sfc(st_linestring(cbind(-180, c(-30, -80))), crs = 4326), st_crs(ibcso_500))
ibcso_500 <- st_transform(st_split(ibcso_500, splitline), 4326)
raadtools::read_amsr_ice(returnfiles = T)
library(lwgeom)
ibcso_500 <- st_transform(lwgeom::st_split(ibcso_500, splitline), 4326)
plot(ibcso_500)
cl <- rasterToContour(topo, levels = -500)
library(sf)
library(lwgeom)
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
x <- lwgeom::st_split(ibcso_500, splitline)
plot(x)
mapview(x)
library(mapview)
plainview(x)
lwgeom::st_split(ibcso_500, splitline)
ibcso_500 <- st_transform(st_cast(lwgeom::st_split(ibcso_500, splitline)), 4326)
plot(ibcso_500)
ibcso_500
plot(ibcso_500[1, ])
plot(ibcso_500[2, ])
plot(ibcso_500[1, ])
graphics.off()
plot(ibcso_500[1, ])
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
plot(ibcso_500[1, ])
plot(splitline(add = T))
plot(splitline, add = T)
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
splitline <- st_transform(st_sfc(st_linestring(cbind(-180, c(-30, -80))), crs = 4326), st_crs(ibcso_500))
x <- st_cast(lwgeom::st_split(ibcso_500, splitline))
x
plot(x[1, ])
plot(x[2, ])
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
splitline <- st_transform(st_sfc(st_linestring(cbind(-180, c(-30, -80))), crs = 4326), st_crs(ibcso_500))
x <- st_transform(st_cast(lwgeom::st_split(ibcso_500, splitline)), 4326)
plot(x)
splitline <- st_transform(st_sfc(st_linestring(cbind(180, c(-30, -80))), crs = 4326), st_crs(ibcso_500))
x <- st_cast(lwgeom::st_split(ibcso_500, splitline))
plot(x)
plot(x, col = 1:2)
plot(st_transform(x, 4326))
plot(st_transform(x, 4326), col = 1:2)
?st_wrap_dateline
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
st_wrap_dateline(ibcso_500)
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(180, c(-30, -80))), crs = 4326), st_crs(ibcso_500)), 1)
plot(splitline)
plot(splitline)
x <- st_difference(ibcso_500, splitline)
plot(x)
plot(st_transform(x, 4326))
graphics.off()
plot(st_transform(x, 4326))
x
plot(st_union(st_transform(x, 4326)))
st_union(st_transform(x, 4326))
cl <- rasterToContour(topo, levels = -500)
library(sf)
library(lwgeom)
ibcso_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
st_wrap_dateline(ibcso_500)
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(180, c(-30, -80))), crs = 4326), st_crs(ibcso_500)), 1)
x <- st_difference(ibcso_500, splitline)
ibcso_500 <- st_union(st_transform(x, 4326))
usethis::use_data(ibcso_500)
topo <- readAll(readtopo('gebco_14'))
cl <- rasterToContour(topo, levels = -500)
gebco_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
plot(gebco_500)
topo <- crop(readtopo('gebco_14'), extent(-180, 180, -90, -40))
cl <- rasterToContour(topo, levels = -500)
gebco_500 <- st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
plot(gebco_500)
usethis::use_data(gebco_500)
class(gebco_50)
library(socoastal)
class(gebco_500)
gebco_500 <- st_geometry(st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))
)
usethis::use_data(gebco_500)
usethis::use_data(gebco_500, overwrite = TRUE)
library(mapview)
mapview(ibcso_500)
mapview(ibcso_500) %>% mapview(gebco_500)
?mapveiw
?mapview
mapview(ibcso_500) + mapview(gebco_500)
mapview(ibcso_500, color = "dodgerblue") + mapview(gebco_500, color = "firebrick")
mapviewGetOption("basemaps")
library(CCAMLRGIS)
library(help = "CCAMLRGIS")
?load_Coastline
Coast <- load_Coastline("RDATA")
plot(Coast)
class(Coast)
names(Coast)
dim(Coast)
Coast$category
raster::select(Coast)
scar_0 <- subset(coast, gid = 1213)
scar_0 <- subset(Coast, gid = 1213)
scar_0 <- st_as_sf(subset(Coast, gid = 1213))
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(180, c(-30, -80))), crs = 4326), st_crs(scar_0)), 1)
x <- st_difference(scar_0, splitline)
scar_0 <- st_union(st_transform(x, 4326))
plot(x)
scar_0 <- st_as_sf(subset(Coast, gid == 1213))
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(180, c(-30, -80))), crs = 4326), st_crs(scar_0)), 1)
x <- st_difference(scar_0, splitline)
scar_0 <- st_union(st_transform(x, 4326))
plot(scar_0)
scar_0 <- st_cast(st_as_sf(subset(Coast, gid == 1213)), "LINESTRING")
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(180, c(-30, -80))), crs = 4326), st_crs(scar_0)), 1)
x <- st_difference(scar_0, splitline)
scar_0 <- st_union(st_transform(x, 4326))
plot(scar_0)
scar_0 <- st_cast(st_as_sf(subset(Coast, gid == 1213)), "LINESTRING")
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(180, c(-30, -80))), crs = 4326), st_crs(scar_0)), 1)
x <- st_difference(scar_0, splitline)
plot(x)
plot(st_geometry(x))
class(splitline)
plot(splitline, add = T)
Coast
plot(sp::spTransform(wrld_simpl, "+proj=laea +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0 "), add = T)
data("wrld_simpl", package = "maptools")
plot(sp::spTransform(wrld_simpl, "+proj=laea +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0 "), add = T)
plot(sp::spTransform(wrld_simpl, "+proj=laea +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0 "), add = F)
plot(scar_0, add =T)
scar_0 <- st_cast(st_as_sf(subset(Coast, gid == 1213)), "LINESTRING")
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(-180, c(-30, -80))), crs = 4326), st_crs(scar_0)), 1)
plot(scar_0)
plot(scar_0[1])
plot(splitline, add = T)
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(-180, c(-60, -85))), crs = 4326), st_crs(scar_0)), 1)
plot(splitline, add = T)
scar_0 <- st_cast(st_as_sf(subset(Coast, gid == 1213)), "LINESTRING")
splitline <- st_buffer(st_transform(st_sfc(st_linestring(cbind(-180, c(-60, -88))), crs = 4326), st_crs(scar_0)), 1)
x <- st_difference(scar_0, splitline)
scar_0 <- st_union(st_transform(x, 4326))
scar_0
plot(scar_0)
usethis::use_data(scar_0)
usethis::use_readme_rmd()
library(socoastal)
usethis::use_vignette("socoastal")
mapview(st_sfc(ibcso_500, gebco_500, scar_0))
class(ibcso_500)
class(gebco_500)
class(scar_0_500)
class(scar_0)
topo
gebco_500 <- st_cast(st_geometry(st_as_sf(raadtools:::keepOnlyMostComplexLine(cl))), "MULTILINESTRING")
usethis::use_data(gebco_500)
usethis::use_data(gebco_500, overwrite = TRUE)
library(socoastal)
mapview(st_sfc(ibcso_500, gebco_500, scar_0))
ibcso_500
gebco_500
scar_0
mapview(c(ibcso_500, gebco_500, scar_0))
mapview(c(ibcso_500, gebco_500, scar_0), legend = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
layers <- st_sf(name = c("ibcso", "gebco", "scar"), type = c("bathymetry", "bathymetry", "coastline"),
geometry = c(ibcso_500, gebco_500, scar_0))
mapview(layers, zcol = name)
mapview(layers, zcol = "name"")
mapview(layers, zcol = "name")
mapview(layers, zcol = "name")
mapview(layers, zcol = "name", legend = TRUE)
pkgdown::build_site()
devtools::install_github("hadley/pkgdown")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
?mapview
m <- mapview(layers, zcol = "name")
m
m$fullscreen(T)
pkgdown::build_site()
pkgdown::build_site()
library(socoastal)
library(socoastal)
pkgdown::build_site()
viridis::viridis(3)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(socoastal)
library(mapview)
library(sf)
layers <- st_sf(name = c("ibcso", "gebco", "scar"), type = c("bathymetry", "bathymetry", "coastline"),
geometry = c(ibcso_500, gebco_500, scar_0))
m <- mapview(layers, zcol = "name", color = c("#440154FF", "#21908CFF", "#000000FF"))
m
mapviewGetOption("basemaps")
library(socoastal)
library(mapview)
library(sf)
layers <- st_sf(name = c("ibcso", "gebco", "scar"), type = c("bathymetry", "bathymetry", "coastline"),
geometry = c(ibcso_500, gebco_500, scar_0))
m <- mapview(layers, zcol = "name",
color = c("#440154FF", "#21908CFF", "#000000FF"),
## http://leaflet-extras.github.io/leaflet-providers/preview/
map.types = c("ESRI.OceanBaseap", "ESRI.WorldPhysical", "ESRI.NatGeoWorldMap", "CartoDB.DarkMatter", "OpenStreetMap",      "Esri.WorldImagery" ))
m
library(socoastal)
library(mapview)
library(sf)
layers <- st_sf(name = c("ibcso", "gebco", "scar"), type = c("bathymetry", "bathymetry", "coastline"),
geometry = c(ibcso_500, gebco_500, scar_0))
m <- mapview(layers, zcol = "name",
color = c("#440154FF", "#21908CFF", "#000000FF"),
## http://leaflet-extras.github.io/leaflet-providers/preview/
map.types = c("ESRI.OceanBasemap", "ESRI.WorldPhysical", "ESRI.NatGeoWorldMap", "CartoDB.DarkMatter", "OpenStreetMap",      "Esri.WorldImagery" ))
m
library(socoastal)
library(mapview)
library(sf)
layers <- st_sf(name = c("ibcso", "gebco", "scar"), type = c("bathymetry", "bathymetry", "coastline"),
geometry = c(ibcso_500, gebco_500, scar_0))
m <- mapview(layers, zcol = "name",
color = c("#440154FF", "#21908CFF", "#000000FF"),
## http://leaflet-extras.github.io/leaflet-providers/preview/
map.types = c("Esri.OceanBasemap", "Esri.WorldPhysical", "Esri.NatGeoWorldMap", "CartoDB.DarkMatter", "OpenStreetMap",      "Esri.WorldImagery" ))
m
pkgdown::build_site()
usethis::use_travis()
usethis::use_appveyor()
pkgdown::build_site()
pkgdown::build_site()
